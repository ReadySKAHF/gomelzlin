# Generated by Django 4.2.16 on 2025-06-25 15:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Обязательное поле. Используется для входа в систему.",
                        max_length=254,
                        unique=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=13,
                        validators=[
                            django.core.validators.RegexValidator(
                                message='Номер телефона должен быть в формате: "+375XXXXXXXXX"',
                                regex="^\\+?375\\d{9}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("individual", "Физическое лицо"),
                            ("company", "Юридическое лицо"),
                            ("admin", "Администратор"),
                            ("manager", "Менеджер"),
                        ],
                        default="individual",
                        max_length=20,
                        verbose_name="Тип пользователя",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Указывает, что пользователь подтвердил свой email",
                        verbose_name="Подтвержден",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatars/",
                        verbose_name="Аватар",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата рождения"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True,
                        help_text="Получать уведомления на email",
                        verbose_name="Email уведомления",
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False,
                        help_text="Получать SMS уведомления",
                        verbose_name="SMS уведомления",
                    ),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP последнего входа"
                    ),
                ),
                (
                    "login_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество входов"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Отчество"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Должность"
                    ),
                ),
                (
                    "department",
                    models.CharField(blank=True, max_length=100, verbose_name="Отдел"),
                ),
                (
                    "country",
                    models.CharField(
                        default="Беларусь", max_length=50, verbose_name="Страна"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=50, verbose_name="Город"),
                ),
                ("address", models.TextField(blank=True, verbose_name="Адрес")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Почтовый индекс"
                    ),
                ),
                (
                    "additional_phone",
                    models.CharField(
                        blank=True, max_length=13, verbose_name="Дополнительный телефон"
                    ),
                ),
                (
                    "skype",
                    models.CharField(blank=True, max_length=50, verbose_name="Skype"),
                ),
                (
                    "telegram",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Telegram"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("ru", "Русский"), ("en", "English")],
                        default="ru",
                        max_length=10,
                        verbose_name="Язык",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Europe/Minsk",
                        max_length=50,
                        verbose_name="Часовой пояс",
                    ),
                ),
                (
                    "order_status_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Уведомления о статусе заказа"
                    ),
                ),
                (
                    "new_products_notifications",
                    models.BooleanField(
                        default=False, verbose_name="Уведомления о новых товарах"
                    ),
                ),
                (
                    "special_offers_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Уведомления о спецпредложениях"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Внутренние заметки для администрации",
                        verbose_name="Заметки",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Профиль пользователя",
                "verbose_name_plural": "Профили пользователей",
            },
        ),
        migrations.CreateModel(
            name="CompanyProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        max_length=255, verbose_name="Название организации"
                    ),
                ),
                (
                    "legal_form",
                    models.CharField(
                        choices=[
                            ("OOO", "ООО"),
                            ("OAO", "ОАО"),
                            ("ZAO", "ЗАО"),
                            ("IP", "ИП"),
                            ("UP", "УП"),
                            ("OTHER", "Другое"),
                        ],
                        default="OOO",
                        max_length=50,
                        verbose_name="Организационно-правовая форма",
                    ),
                ),
                (
                    "unp",
                    models.CharField(
                        max_length=9,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="УНП должен содержать 9 цифр", regex="^\\d{9}$"
                            )
                        ],
                        verbose_name="УНП",
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата регистрации"
                    ),
                ),
                (
                    "registration_authority",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Орган регистрации"
                    ),
                ),
                (
                    "bank_account",
                    models.CharField(
                        blank=True, max_length=28, verbose_name="Расчетный счет"
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Наименование банка"
                    ),
                ),
                (
                    "bank_code",
                    models.CharField(
                        blank=True, max_length=8, verbose_name="БИК банка"
                    ),
                ),
                ("legal_address", models.TextField(verbose_name="Юридический адрес")),
                (
                    "postal_address",
                    models.TextField(blank=True, verbose_name="Почтовый адрес"),
                ),
                ("website", models.URLField(blank=True, verbose_name="Веб-сайт")),
                (
                    "vat_payer",
                    models.BooleanField(default=True, verbose_name="Плательщик НДС"),
                ),
                (
                    "vat_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Номер плательщика НДС"
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Вид деятельности"
                    ),
                ),
                (
                    "employee_count",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Количество сотрудников"
                    ),
                ),
                (
                    "annual_revenue",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="Годовой оборот",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Профиль компании",
                "verbose_name_plural": "Профили компаний",
            },
        ),
    ]
