# apps/core/management/commands/debug_products.py
from django.core.management.base import BaseCommand
from django.utils.text import slugify
from apps.catalog.models import Category, Product


class Command(BaseCommand):
    help = '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–≤–∞—Ä—ã –∏ –∏—Ö URL –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö URL...'))
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        categories_count = Category.objects.count()
        products_count = Product.objects.count()
        active_products = Product.objects.filter(is_active=True, is_published=True).count()
        
        self.stdout.write(f'\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
        self.stdout.write(f'   –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {categories_count}')
        self.stdout.write(f'   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {products_count}')
        self.stdout.write(f'   –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {active_products}')
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤
        self.stdout.write(f'\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤:')
        self.stdout.write('=' * 80)
        
        products = Product.objects.filter(is_active=True, is_published=True)[:5]
        
        for i, product in enumerate(products, 1):
            self.stdout.write(f'\n{i}. –¢–æ–≤–∞—Ä: {product.name}')
            self.stdout.write(f'   ID: {product.id}')
            self.stdout.write(f'   –ê—Ä—Ç–∏–∫—É–ª: {product.article}')
            self.stdout.write(f'   Slug: "{product.slug}"')
            self.stdout.write(f'   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.category.name}')
            self.stdout.write(f'   Slug –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: "{product.category.slug}"')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
            try:
                url = product.get_absolute_url()
                self.stdout.write(f'   ‚úÖ URL: {url}')
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL
                if url.startswith('/catalog/product/') and product.slug in url:
                    self.stdout.write(f'   ‚úÖ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π')
                else:
                    self.stdout.write(f'   ‚ùå URL –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π! –û–∂–∏–¥–∞–ª—Å—è: /catalog/product/{product.slug}/')
                    
            except Exception as e:
                self.stdout.write(f'   ‚ùå –û—à–∏–±–∫–∞ URL: {e}')
            
            self.stdout.write('-' * 60)
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä –∏–∑ –æ—à–∏–±–∫–∏
        self.stdout.write(f'\nüéØ –ò—â–µ–º —Ç–æ–≤–∞—Ä "zhatka-valkovaya-pricepnaya-4-metrovaya":')
        self.stdout.write('=' * 80)
        
        try:
            product = Product.objects.get(slug='zhatka-valkovaya-pricepnaya-4-metrovaya')
            self.stdout.write(f'‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω!')
            self.stdout.write(f'   –ù–∞–∑–≤–∞–Ω–∏–µ: {product.name}')
            self.stdout.write(f'   Slug: {product.slug}')
            self.stdout.write(f'   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.category.name}')
            self.stdout.write(f'   URL: {product.get_absolute_url()}')
            self.stdout.write(f'   –ê–∫—Ç–∏–≤–µ–Ω: {product.is_active}')
            self.stdout.write(f'   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: {product.is_published}')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –Ω–∞–ø—Ä—è–º—É—é
            correct_url = f'/catalog/product/{product.slug}/'
            actual_url = product.get_absolute_url()
            
            if actual_url == correct_url:
                self.stdout.write(f'   ‚úÖ URL –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
                self.stdout.write(f'   üëâ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: http://127.0.0.1:8000{correct_url}')
            else:
                self.stdout.write(f'   ‚ùå URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!')
                self.stdout.write(f'   –û–∂–∏–¥–∞–ª—Å—è: {correct_url}')
                self.stdout.write(f'   –ü–æ–ª—É—á–µ–Ω: {actual_url}')
                
        except Product.DoesNotExist:
            self.stdout.write(f'‚ùå –¢–æ–≤–∞—Ä —Å slug "zhatka-valkovaya-pricepnaya-4-metrovaya" –ù–ï –Ω–∞–π–¥–µ–Ω!')
            
            # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã
            similar_products = Product.objects.filter(
                slug__icontains='zhatka'
            )[:3]
            
            if similar_products.exists():
                self.stdout.write(f'\nüîç –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã:')
                for prod in similar_products:
                    self.stdout.write(f'   - {prod.name} (slug: {prod.slug})')
            else:
                self.stdout.write(f'   –ü–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –æ—à–∏–±–∫–∏
        self.stdout.write(f'\nüìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "zhatki-valkovye-pricepnye":')
        self.stdout.write('=' * 80)
        
        try:
            category = Category.objects.get(slug='zhatki-valkovye-pricepnye')
            self.stdout.write(f'‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–∞!')
            self.stdout.write(f'   –ù–∞–∑–≤–∞–Ω–∏–µ: {category.name}')
            self.stdout.write(f'   Slug: {category.slug}')
            self.stdout.write(f'   URL: {category.get_absolute_url()}')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            products_in_category = category.products.filter(is_active=True, is_published=True)
            self.stdout.write(f'   –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {products_in_category.count()}')
            
            for prod in products_in_category[:3]:
                self.stdout.write(f'     - {prod.name} (slug: {prod.slug})')
                self.stdout.write(f'       URL: {prod.get_absolute_url()}')
                
        except Category.DoesNotExist:
            self.stdout.write(f'‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å slug "zhatki-valkovye-pricepnye" –ù–ï –Ω–∞–π–¥–µ–Ω–∞!')
        
        # 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        self.stdout.write(f'\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:')
        self.stdout.write('=' * 80)
        self.stdout.write('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∞–¥–º–∏–Ω–∫–µ: http://127.0.0.1:8000/django-admin/catalog/product/')
        self.stdout.write('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–≤–∞—Ä—ã –∏–º–µ—é—Ç slug –∏ –∞–∫—Ç–∏–≤–Ω—ã')
        self.stdout.write('3. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π URL —Ç–æ–≤–∞—Ä–∞: /catalog/product/SLUG/')
        self.stdout.write('4. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ URL –≤–∏–¥–∞: /catalog/category/CAT_SLUG/PRODUCT_SLUG/')
        
        if products_count == 0:
            self.stdout.write(f'\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í –±–∞–∑–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤!')
            self.stdout.write('   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py load_initial_data')
            self.stdout.write('   –ò–ª–∏:       python manage.py fix_products')