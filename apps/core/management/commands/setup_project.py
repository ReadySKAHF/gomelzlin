# apps/core/management/commands/setup_project.py
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.conf import settings
import os


class Command(BaseCommand):
    help = '–ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –û–ê–û "–ì–ó–õ–∏–ù"'

    def add_arguments(self, parser):
        parser.add_argument(
            '--admin-email',
            type=str,
            default='admin@gomelzlin.by',
            help='Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
        )
        parser.add_argument(
            '--admin-password',
            type=str,
            default='admin123456',
            help='–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
        )
        parser.add_argument(
            '--skip-data',
            action='store_true',
            help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö'
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –û–ê–û "–ì–ó–õ–∏–ù"...')
        )
        
        # 1. –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.create_superuser(options['admin_email'], options['admin_password'])
        
        # 2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        self.create_directories()
        
        # 3. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        if not options['skip_data']:
            self.load_initial_data()
        
        # 4. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        self.create_basic_pages()
        
        # 5. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.show_final_stats()
        
        self.stdout.write(
            self.style.SUCCESS('\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
        )
        self.stdout.write(
            self.style.WARNING('\nüìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É:')
        )
        self.stdout.write(f'   Email: {options["admin_email"]}')
        self.stdout.write(f'   –ü–∞—Ä–æ–ª—å: {options["admin_password"]}')
        self.stdout.write(f'   URL: http://localhost:8000/admin/')

    def create_superuser(self, email, password):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        User = get_user_model()
        
        if User.objects.filter(email=email).exists():
            self.stdout.write(
                self.style.WARNING(f'‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email {email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            )
            return
        
        try:
            user = User.objects.create_superuser(
                email=email,
                password=password,
                first_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                last_name='–ì–ó–õ–∏–ù'
            )
            self.stdout.write(
                self.style.SUCCESS(f'‚úì –°–æ–∑–¥–∞–Ω —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {email}')
            )
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')
            )

    def create_directories(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
        directories = [
            'media/categories',
            'media/products',
            'media/companies',
            'media/users',
            'static/admin',
            'staticfiles',
        ]
        
        for directory in directories:
            full_path = os.path.join(settings.BASE_DIR, directory)
            if not os.path.exists(full_path):
                os.makedirs(full_path, exist_ok=True)
                self.stdout.write(f'‚úì –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}')

    def load_initial_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        from django.core.management import call_command
        
        self.stdout.write('\nüì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...')
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã
            call_command('load_initial_data')
            self.stdout.write(
                self.style.SUCCESS('‚úì –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
            )
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}')
            )

    def create_basic_pages(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü"""
        self.stdout.write('\nüìÑ –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...')
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏, –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏ —Ç.–¥.
        
        self.create_company_info()
        self.create_management_team()
        self.create_partners()

    def create_company_info(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏"""
        try:
            from apps.company.models import CompanyInfo
            
            if not CompanyInfo.objects.exists():
                CompanyInfo.objects.create(
                    full_name='–û—Ç–∫—Ä—ã—Ç–æ–µ –∞–∫—Ü–∏–æ–Ω–µ—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ "–ì–æ–º–µ–ª—å—Å–∫–∏–π –∑–∞–≤–æ–¥ –ª–∏—Ç–µ–π–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –∏ –Ω–æ—Ä–º–∞–ª–µ–π"',
                    short_name='–û–ê–û "–ì–ó–õ–∏–ù"',
                    brand_name='–ì–ó–õ–∏–ù',
                    founded_year=1965,
                    description='''–û–ê–û "–ì–ó–õ–∏–ù" - –≤–µ–¥—É—â–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –ª–∏—Ç–µ–π–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –∏ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ 
                    –≤ –†–µ—Å–ø—É–±–ª–∏–∫–µ –ë–µ–ª–∞—Ä—É—Å—å. –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ –∂–∞—Ç–≤–µ–Ω–Ω—ã—Ö –∞–≥—Ä–µ–≥–∞—Ç–æ–≤, 
                    –∫–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏, –º–µ—Ç–∏–∑–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –∏ –¥—Ä—É–≥–æ–≥–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.''',
                    mission='''–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∞–≥—Ä–∞—Ä–Ω–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞ –ë–µ–ª–∞—Ä—É—Å–∏ –∏ —Å—Ç—Ä–∞–Ω –°–ù–ì –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∏ –Ω–∞–¥–µ–∂–Ω–æ–π 
                    —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–º–∏ –∏–∑–¥–µ–ª–∏—è–º–∏.''',
                    phone='+375 232 12-34-56',
                    email='info@gomelzlin.by',
                    legal_address='246000, –≥. –ì–æ–º–µ–ª—å, —É–ª. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 15',
                    postal_address='246000, –≥. –ì–æ–º–µ–ª—å, —É–ª. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 15'
                )
                self.stdout.write('‚úì –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏')
        except Exception as e:
            self.stdout.write(f'‚ö† –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏: {e}')

    def create_management_team(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞"""
        try:
            from apps.company.models import ManagementMember
            
            if not ManagementMember.objects.exists():
                management_data = [
                    {
                        'full_name': '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
                        'position': '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
                        'email': 'director@gomelzlin.by',
                        'phone': '+375 232 12-34-57',
                        'bio': '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ –º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –±–æ–ª–µ–µ 20 –ª–µ—Ç.',
                        'sort_order': 1
                    },
                    {
                        'full_name': '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á',
                        'position': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
                        'email': 'tech@gomelzlin.by',
                        'phone': '+375 232 12-34-58',
                        'bio': '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏.',
                        'sort_order': 2
                    },
                    {
                        'full_name': '–°–∏–¥–æ—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞',
                        'position': '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
                        'email': 'sales@gomelzlin.by',
                        'phone': '+375 232 12-34-59',
                        'bio': '–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–¥–∞–∂ –∏ —Ä–∞–±–æ—Ç—É —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.',
                        'sort_order': 3
                    }
                ]
                
                for member_data in management_data:
                    ManagementMember.objects.create(**member_data)
                
                self.stdout.write('‚úì –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞')
        except Exception as e:
            self.stdout.write(f'‚ö† –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞: {e}')

    def create_partners(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤"""
        try:
            from apps.company.models import Partner
            
            if not Partner.objects.exists():
                partners_data = [
                    {
                        'name': '–û–ê–û "–ë–ï–õ–ê–ó"',
                        'description': '–í–µ–¥—É—â–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –∫–∞—Ä—å–µ—Ä–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏. –ú–Ω–æ–≥–æ–ª–µ—Ç–Ω–µ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–æ—Å—Ç–∞–≤–æ–∫ –ª–∏—Ç–µ–π–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π.',
                        'website': 'https://belaz.by',
                        'sort_order': 1
                    },
                    {
                        'name': '–û–ê–û "–ú–¢–ó"',
                        'description': '–ú–∏–Ω—Å–∫–∏–π —Ç—Ä–∞–∫—Ç–æ—Ä–Ω—ã–π –∑–∞–≤–æ–¥. –ü–æ—Å—Ç–∞–≤–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ª–∏—Ç–µ–π–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –¥–ª—è —Ç—Ä–∞–∫—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏.',
                        'website': 'https://mtz.by',
                        'sort_order': 2
                    },
                    {
                        'name': '–û–ê–û "–ú–ê–ó"',
                        'description': '–ú–∏–Ω—Å–∫–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –∑–∞–≤–æ–¥. –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –≥—Ä—É–∑–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.',
                        'website': 'https://maz.by',
                        'sort_order': 3
                    }
                ]
                
                for partner_data in partners_data:
                    Partner.objects.create(**partner_data)
                
                self.stdout.write('‚úì –°–æ–∑–¥–∞–Ω —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤')
        except Exception as e:
            self.stdout.write(f'‚ö† –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤: {e}')

    def show_final_stats(self):
        """–ü–æ–∫–∞–∑ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        try:
            from apps.catalog.models import Category, Product
            from django.contrib.auth import get_user_model
            
            User = get_user_model()
            
            stats = {
                '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏': User.objects.count(),
                '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏': Category.objects.count(),
                '–¢–æ–≤–∞—Ä—ã': Product.objects.count(),
                '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã': Product.objects.filter(is_published=True).count(),
                '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã': Product.objects.filter(is_featured=True).count(),
            }
            
            self.stdout.write('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:')
            for key, value in stats.items():
                self.stdout.write(f'   {key}: {value}')
                
        except Exception as e:
            self.stdout.write(f'‚ö† –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}')