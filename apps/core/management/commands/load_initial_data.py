from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from apps.core.models import SiteSettings
from apps.company.models import CompanyInfo, Leader
from apps.catalog.models import Category
from apps.dealers.models import DealerCenter

User = get_user_model()


class Command(BaseCommand):
    help = '–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–∞–π—Ç–∞'

    def handle(self, *args, **options):
        self.stdout.write('–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')
        
        # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
        self.create_site_settings()
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏
        self.create_company_info()
        
        # –°–æ–∑–¥–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
        self.create_leadership()
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        self.create_categories()
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏–ª–µ—Ä—Å–∫–∏–µ —Ü–µ–Ω—Ç—Ä—ã
        self.create_dealers()
        
        self.stdout.write(
            self.style.SUCCESS('–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')
        )

    def create_site_settings(self):
        """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞"""
        settings, created = SiteSettings.objects.get_or_create(
            pk=1,
            defaults={
                'company_name': '–û–ê–û "–ì–æ–º–µ–ª—å—Å–∫–∏–π –∑–∞–≤–æ–¥ –ª–∏—Ç–µ–π–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –∏ –Ω–æ—Ä–º–∞–ª–µ–π"',
                'company_short_name': '–ì–ó–õ–∏–ù',
                'phone': '+375 232 12-34-56',
                'email': 'info@gomelzlin.by',
                'address': '246000, –≥. –ì–æ–º–µ–ª—å, —É–ª. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 15',
                'working_hours': '–ü–Ω-–ü—Ç: 8:00-17:00\n–°–±-–í—Å: –≤—ã—Ö–æ–¥–Ω–æ–π',
                'min_order_amount': 100.00,
                'order_notification_email': 'orders@gomelzlin.by',
                'admin_notification_email': 'admin@gomelzlin.by',
            }
        )
        if created:
            self.stdout.write('  ‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ —Å–æ–∑–¥–∞–Ω—ã')

    def create_company_info(self):
        """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏"""
        info, created = CompanyInfo.objects.get_or_create(
            pk=1,
            defaults={
                'full_name': '–û—Ç–∫—Ä—ã—Ç–æ–µ –∞–∫—Ü–∏–æ–Ω–µ—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ "–ì–æ–º–µ–ª—å—Å–∫–∏–π –∑–∞–≤–æ–¥ –ª–∏—Ç–µ–π–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –∏ –Ω–æ—Ä–º–∞–ª–µ–π"',
                'short_name': '–û–ê–û "–ì–ó–õ–∏–ù"',
                'brand_name': '–ì–ó–õ–∏–ù',
                'founded_year': 1965,
                'mission': '–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –ë–µ–ª–∞—Ä—É—Å–∏ –∏ —Å—Ç—Ä–∞–Ω –°–ù–ì –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ª–∏—Ç–µ–π–Ω—ã–º–∏ –∏–∑–¥–µ–ª–∏—è–º–∏ –∏ –Ω–æ—Ä–º–∞–ª—è–º–∏.',
                'description': '–í–µ–¥—É—â–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –ª–∏—Ç–µ–π–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –∏ –Ω–æ—Ä–º–∞–ª–µ–π –≤ –†–µ—Å–ø—É–±–ª–∏–∫–µ –ë–µ–ª–∞—Ä—É—Å—å —Å 1965 –≥–æ–¥–∞.',
                'phone': '+375 232 12-34-56',
                'email': 'info@gomelzlin.by',
                'legal_address': '246000, –≥. –ì–æ–º–µ–ª—å, —É–ª. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 15',
                'unp': '400123456',
            }
        )
        if created:
            self.stdout.write('  ‚úì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω–∞')

    def create_leadership(self):
        """–°–æ–∑–¥–∞–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"""
        leaders_data = [
            {
                'first_name': '–ò–≤–∞–Ω',
                'last_name': '–ò–≤–∞–Ω–æ–≤',
                'middle_name': '–ò–≤–∞–Ω–æ–≤–∏—á',
                'position': '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
                'position_type': 'director',
                'email': 'director@gomelzlin.by',
                'phone': '+375 232 12-34-56',
                'sort_order': 1,
            },
            {
                'first_name': '–ê–Ω–Ω–∞',
                'last_name': '–ü–µ—Ç—Ä–æ–≤–∞',
                'middle_name': '–°–µ—Ä–≥–µ–µ–≤–Ω–∞',
                'position': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
                'position_type': 'deputy_director',
                'email': 'tech@gomelzlin.by',
                'phone': '+375 232 12-34-57',
                'sort_order': 2,
            },
            {
                'first_name': '–ü–µ—Ç—Ä',
                'last_name': '–°–∏–¥–æ—Ä–æ–≤',
                'middle_name': '–ê–ª–µ–∫—Å–µ–µ–≤–∏—á',
                'position': '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
                'position_type': 'deputy_director',
                'email': 'sales@gomelzlin.by',
                'phone': '+375 232 12-34-58',
                'sort_order': 3,
            },
        ]
        
        for leader_data in leaders_data:
            leader, created = Leader.objects.get_or_create(
                email=leader_data['email'],
                defaults=leader_data
            )
            if created:
                self.stdout.write(f'  ‚úì –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å {leader.get_full_name()} —Å–æ–∑–¥–∞–Ω')

    def create_categories(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤"""
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        fittings, created = Category.objects.get_or_create(
            slug='fittings',
            defaults={
                'name': '–§–∏—Ç–∏–Ω–≥–∏',
                'description': '–®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ñ–∏—Ç–∏–Ω–≥–æ–≤ –¥–ª—è —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤ —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è',
                'icon': 'üîß',
                'is_featured': True,
                'sort_order': 1,
            }
        )
        
        valves, created = Category.objects.get_or_create(
            slug='valves',
            defaults={
                'name': '–¢—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–Ω–∞—è –∞—Ä–º–∞—Ç—É—Ä–∞',
                'description': '–ö—Ä–∞–Ω—ã, –≤–µ–Ω—Ç–∏–ª–∏, –∑–∞–¥–≤–∏–∂–∫–∏ –∏ –¥—Ä—É–≥–∞—è –∑–∞–ø–æ—Ä–Ω–∞—è –∞—Ä–º–∞—Ç—É—Ä–∞',
                'icon': 'üö∞',
                'is_featured': True,
                'sort_order': 2,
            }
        )
        
        castings, created = Category.objects.get_or_create(
            slug='castings',
            defaults={
                'name': '–õ–∏—Ç–µ–π–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è',
                'description': '–û—Ç–ª–∏–≤–∫–∏ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ø–ª–∞–≤–æ–≤ –ø–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –∑–∞–∫–∞–∑–∞–º',
                'icon': 'üè≠',
                'is_featured': True,
                'sort_order': 3,
            }
        )
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫ateg–æ—Ä–∏–∏ –¥–ª—è —Ñ–∏—Ç–∏–Ω–≥–æ–≤
        subcategories = [
            {'name': '–£–≥–æ–ª–∫–∏', 'parent': fittings, 'slug': 'angles'},
            {'name': '–¢—Ä–æ–π–Ω–∏–∫–∏', 'parent': fittings, 'slug': 'tees'},
            {'name': '–ü–µ—Ä–µ—Ö–æ–¥–Ω–∏–∫–∏', 'parent': fittings, 'slug': 'adapters'},
        ]
        
        for subcat_data in subcategories:
            subcat, created = Category.objects.get_or_create(
                slug=subcat_data['slug'],
                defaults=subcat_data
            )
            if created:
                self.stdout.write(f'  ‚úì –ö–∞—Ç–µ–≥–æ—Ä–∏—è {subcat.name} —Å–æ–∑–¥–∞–Ω–∞')

    def create_dealers(self):
        """–°–æ–∑–¥–∞–µ—Ç –¥–∏–ª–µ—Ä—Å–∫–∏–µ —Ü–µ–Ω—Ç—Ä—ã"""
        dealers_data = [
            {
                'name': '–î–∏–ª–µ—Ä—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –ú–∏–Ω—Å–∫',
                'region': 'minsk_city',
                'city': '–ú–∏–Ω—Å–∫',
                'address': '–ø—Ä. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, 125',
                'contact_person': '–°–µ—Ä–≥–µ–π –ú–∏–Ω—Å–∫–∏–π',
                'phone': '+375171234567',
                'email': 'minsk@gomelzlin.by',
                'dealer_type': 'official',
                'is_featured': True,
            },
            {
                'name': '–î–∏–ª–µ—Ä—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –ë—Ä–µ—Å—Ç',
                'region': 'brest',
                'city': '–ë—Ä–µ—Å—Ç',
                'address': '—É–ª. –ú–æ—Å–∫–æ–≤—Å–∫–∞—è, 45',
                'contact_person': '–ê–Ω–Ω–∞ –ë—Ä–µ—Å—Ç—Å–∫–∞—è',
                'phone': '+375162123456',
                'email': 'brest@gomelzlin.by',
                'dealer_type': 'authorized',
            },
            {
                'name': '–î–∏–ª–µ—Ä—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –í–∏—Ç–µ–±—Å–∫',
                'region': 'vitebsk',
                'city': '–í–∏—Ç–µ–±—Å–∫',
                'address': '—É–ª. –õ–µ–Ω–∏–Ω–∞, 78',
                'contact_person': '–ù–∏–∫–æ–ª–∞–π –í–∏—Ç–µ–±—Å–∫–∏–π',
                'phone': '+375212123456',
                'email': 'vitebsk@gomelzlin.by',
                'dealer_type': 'authorized',
            },
        ]
        
        for dealer_data in dealers_data:
            dealer, created = DealerCenter.objects.get_or_create(
                email=dealer_data['email'],
                defaults=dealer_data
            )
            if created:
                self.stdout.write(f'  ‚úì –î–∏–ª–µ—Ä {dealer.name} —Å–æ–∑–¥–∞–Ω')