# apps/core/management/commands/load_initial_data.py
from django.core.management.base import BaseCommand
from django.utils.text import slugify
from apps.catalog.models import Category, Product
from decimal import Decimal
import random


class Command(BaseCommand):
    help = '–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –û–ê–û "–ì–ó–õ–∏–ù"'

    def handle(self, *args, **options):
        self.stdout.write('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–æ–≤–∞—Ä–æ–≤ –û–ê–û "–ì–ó–õ–∏–ù"...')
        
        # –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∑–∞–¥–∞–Ω–∏—é
        categories_data = {
            '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': [
                '–ñ–∞—Ç–∫–∏ –≤–∞–ª–∫–æ–≤—ã–µ –Ω–∞–≤–µ—Å–Ω—ã–µ',
                '–ñ–∞—Ç–∫–∏ –≤–∞–ª–∫–æ–≤—ã–µ –ø—Ä–∏—Ü–µ–ø–Ω—ã–µ',
                '–ñ–∞—Ç–∫–∏ –¥–ª—è –∑–µ—Ä–Ω–æ–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä',
                '–ñ–∞—Ç–∫–∏ –¥–ª—è —É–±–æ—Ä–∫–∏ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–∏–∫–∞',
                '–ñ–∞—Ç–∫–∏ –¥–ª—è —É–±–æ—Ä–∫–∏ —Å–æ–∏ –∏ –∑–µ—Ä–Ω–æ–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä',
                '–ñ–∞—Ç–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ',
                '–ö–æ–º–ø–ª–µ–∫—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —É–±–æ—Ä–∫–∏ –∫—É–∫—É—Ä—É–∑—ã –Ω–∞ –∑–µ—Ä–Ω–æ',
                '–ü–æ–¥–±–æ—Ä—â–∏–∫–∏ –∑–µ—Ä–Ω–æ–≤—ã–µ'
            ],
            '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': [
                '–ñ–∞—Ç–∫–∏ –¥–ª—è –≥—Ä—É–±–æ—Å—Ç–µ–±–µ–ª—å–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä',
                '–ñ–∞—Ç–∫–∏ –¥–ª—è —Ç—Ä–∞–≤',
                '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω—ã–µ –∫–æ–º–±–∞–π–Ω—ã',
                '–ö–æ—Å–∏–ª–∫–∏',
                '–ü–æ–¥–±–æ—Ä—â–∏–∫–∏',
                '–°–∞–º–æ—Ö–æ–¥–Ω—ã–π –∫–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω—ã–π –∫–æ–º–±–∞–π–Ω'
            ],
            '–ö–∞—Ä—Ç–æ—Ñ–µ–ª–µ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': [],
            '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è': [
                '–ë–æ–ª—Ç—ã',
                '–í–∏–Ω—Ç—ã',
                '–ì–∞–π–∫–∏',
                '–ó–∞–∫–ª–µ–ø–∫–∏',
                '–û—Å–∏',
                '–®–∞–π–±—ã –ø—Ä—É–∂–∏–Ω–Ω—ã–µ',
                '–®–ø–∏–ª—å–∫–∞'
            ],
            '–ü—Ä–æ—á–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': [],
            '–ë—É–Ω–∫–µ—Ä—ã-–ø–µ—Ä–µ–≥—Ä—É–∑—á–∏–∫–∏': [],
            '–ù–æ–≤–∏–Ω–∫–∏': [],
            '–ü—Ä–æ—á–∏–µ —Ç–æ–≤–∞—Ä—ã, —Ä–∞–±–æ—Ç—ã –∏ —É—Å–ª—É–≥–∏': [],
            '–†–µ–∂—É—â–∏–µ —Å–∏—Å—Ç–µ–º—ã –∂–∞—Ç–æ–∫': [],
            '–°–∞–º–æ—Ö–æ–¥–Ω—ã–µ –Ω–æ—Å–∏–ª–∫–∏': []
        }
        
        # –û–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        category_descriptions = {
            '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': '–®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∂–∞—Ç–æ–∫ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —É–±–æ—Ä–∫–∏ –∑–µ—Ä–Ω–æ–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä',
            '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': '–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –∫–æ—Ä–º–æ–≤, –∂–∞—Ç–∫–∏ –¥–ª—è —Ç—Ä–∞–≤ –∏ –∫–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω—ã–µ –∫–æ–º–±–∞–π–Ω—ã',
            '–ö–∞—Ä—Ç–æ—Ñ–µ–ª–µ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —É–±–æ—Ä–∫–∏ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è',
            '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è': '–ö—Ä–µ–ø–µ–∂–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è, –±–æ–ª—Ç—ã, –≤–∏–Ω—Ç—ã, –≥–∞–π–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç–∏–∑—ã',
            '–ü—Ä–æ—á–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
            '–ë—É–Ω–∫–µ—Ä—ã-–ø–µ—Ä–µ–≥—Ä—É–∑—á–∏–∫–∏': '–ë—É–Ω–∫–µ—Ä—ã –∏ –ø–µ—Ä–µ–≥—Ä—É–∑–æ—á–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –∑–µ—Ä–Ω–∞',
            '–ù–æ–≤–∏–Ω–∫–∏': '–ù–æ–≤—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –û–ê–û "–ì–ó–õ–∏–ù"',
            '–ü—Ä–æ—á–∏–µ —Ç–æ–≤–∞—Ä—ã, —Ä–∞–±–æ—Ç—ã –∏ —É—Å–ª—É–≥–∏': '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏ –∫–æ–º–ø–∞–Ω–∏–∏',
            '–†–µ–∂—É—â–∏–µ —Å–∏—Å—Ç–µ–º—ã –∂–∞—Ç–æ–∫': '–ù–æ–∂–∏, —Å–µ–≥–º–µ–Ω—Ç—ã –∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–µ–∂—É—â–∏—Ö —Å–∏—Å—Ç–µ–º',
            '–°–∞–º–æ—Ö–æ–¥–Ω—ã–µ –Ω–æ—Å–∏–ª–∫–∏': '–°–∞–º–æ—Ö–æ–¥–Ω—ã–µ –Ω–æ—Å–∏–ª–∫–∏ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ'
        }
        
        created_categories = 0
        created_subcategories = 0
        created_products = 0
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for category_name, subcategories in categories_data.items():
            # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            main_category, created = Category.objects.get_or_create(
                name=category_name,
                defaults={
                    'slug': self.generate_unique_slug(category_name),
                    'description': category_descriptions.get(category_name, f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è {category_name}'),
                    'is_active': True,
                    'is_featured': True,
                    'sort_order': list(categories_data.keys()).index(category_name) + 1
                }
            )
            
            if created:
                created_categories += 1
                self.stdout.write(f'‚úì –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category_name}')
            else:
                self.stdout.write(f'  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {category_name}')
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            for i, subcategory_name in enumerate(subcategories):
                sub_category, sub_created = Category.objects.get_or_create(
                    name=subcategory_name,
                    parent=main_category,
                    defaults={
                        'slug': self.generate_unique_slug(subcategory_name),
                        'description': f'–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è {subcategory_name}',
                        'is_active': True,
                        'is_featured': False,
                        'sort_order': i + 1
                    }
                )
                
                if sub_created:
                    created_subcategories += 1
                    self.stdout.write(f'  ‚Ü≥ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {subcategory_name}')
                else:
                    self.stdout.write(f'    –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {subcategory_name}')
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
        sample_products = [
            # –ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞
            ('–ñ–í–ù-3', '–ñ–∞—Ç–∫–∞ –≤–∞–ª–∫–æ–≤–∞—è –Ω–∞–≤–µ—Å–Ω–∞—è 3-–º–µ—Ç—Ä–æ–≤–∞—è', '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ñ–∞—Ç–∫–∏ –≤–∞–ª–∫–æ–≤—ã–µ –Ω–∞–≤–µ—Å–Ω—ã–µ'),
            ('–ñ–í–ü-4', '–ñ–∞—Ç–∫–∞ –≤–∞–ª–∫–æ–≤–∞—è –ø—Ä–∏—Ü–µ–ø–Ω–∞—è 4-–º–µ—Ç—Ä–æ–≤–∞—è', '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ñ–∞—Ç–∫–∏ –≤–∞–ª–∫–æ–≤—ã–µ –ø—Ä–∏—Ü–µ–ø–Ω—ã–µ'),
            ('–ñ–ó–ö-5', '–ñ–∞—Ç–∫–∞ –¥–ª—è –∑–µ—Ä–Ω–æ–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä 5-–º–µ—Ç—Ä–æ–≤–∞—è', '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ñ–∞—Ç–∫–∏ –¥–ª—è –∑–µ—Ä–Ω–æ–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä'),
            ('–ñ–£–ü-6', '–ñ–∞—Ç–∫–∞ –¥–ª—è —É–±–æ—Ä–∫–∏ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–∏–∫–∞ 6-—Ä—è–¥–Ω–∞—è', '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ñ–∞—Ç–∫–∏ –¥–ª—è —É–±–æ—Ä–∫–∏ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–∏–∫–∞'),
            ('–ñ–°–ó-4', '–ñ–∞—Ç–∫–∞ –¥–ª—è —Å–æ–∏ –∏ –∑–µ—Ä–Ω–æ–≤—ã—Ö 4-–º–µ—Ç—Ä–æ–≤–∞—è', '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ñ–∞—Ç–∫–∏ –¥–ª—è —É–±–æ—Ä–∫–∏ —Å–æ–∏ –∏ –∑–µ—Ä–Ω–æ–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä'),
            ('–ñ–¢-5', '–ñ–∞—Ç–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è 5-–º–µ—Ç—Ä–æ–≤–∞—è', '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ñ–∞—Ç–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ'),
            ('–ö–£–ö-8', '–ö–æ–º–ø–ª–µ–∫—Ç –¥–ª—è —É–±–æ—Ä–∫–∏ –∫—É–∫—É—Ä—É–∑—ã 8-—Ä—è–¥–Ω—ã–π', '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ö–æ–º–ø–ª–µ–∫—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —É–±–æ—Ä–∫–∏ –∫—É–∫—É—Ä—É–∑—ã –Ω–∞ –∑–µ—Ä–Ω–æ'),
            ('–ü–ó-3', '–ü–æ–¥–±–æ—Ä—â–∏–∫ –∑–µ—Ä–Ω–æ–≤–æ–π 3-–º–µ—Ç—Ä–æ–≤—ã–π', '–ó–µ—Ä–Ω–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ü–æ–¥–±–æ—Ä—â–∏–∫–∏ –∑–µ—Ä–Ω–æ–≤—ã–µ'),
            
            # –ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞
            ('–ñ–ì–ö-4', '–ñ–∞—Ç–∫–∞ –¥–ª—è –≥—Ä—É–±–æ—Å—Ç–µ–±–µ–ª—å–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä 4-–º–µ—Ç—Ä–æ–≤–∞—è', '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ñ–∞—Ç–∫–∏ –¥–ª—è –≥—Ä—É–±–æ—Å—Ç–µ–±–µ–ª—å–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä'),
            ('–ñ–¢–†-3', '–ñ–∞—Ç–∫–∞ –¥–ª—è —Ç—Ä–∞–≤ 3-–º–µ—Ç—Ä–æ–≤–∞—è', '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ñ–∞—Ç–∫–∏ –¥–ª—è —Ç—Ä–∞–≤'),
            ('–ö–£-700', '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω—ã–π –∫–æ–º–±–∞–π–Ω —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π', '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω—ã–µ –∫–æ–º–±–∞–π–Ω—ã'),
            ('–ö–°-2', '–ö–æ—Å–∏–ª–∫–∞ —Å–µ–≥–º–µ–Ω—Ç–Ω–∞—è 2-–º–µ—Ç—Ä–æ–≤–∞—è', '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ö–æ—Å–∏–ª–∫–∏'),
            ('–ü–ö-4', '–ü–æ–¥–±–æ—Ä—â–∏–∫ –∫–æ—Ä–º–æ–≤ 4-–º–µ—Ç—Ä–æ–≤—ã–π', '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–ü–æ–¥–±–æ—Ä—â–∏–∫–∏'),
            ('–°–ö–ö-500', '–°–∞–º–æ—Ö–æ–¥–Ω—ã–π –∫–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω—ã–π –∫–æ–º–±–∞–π–Ω', '–ö–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', '–°–∞–º–æ—Ö–æ–¥–Ω—ã–π –∫–æ—Ä–º–æ—É–±–æ—Ä–æ—á–Ω—ã–π –∫–æ–º–±–∞–π–Ω'),
            
            # –ö–∞—Ä—Ç–æ—Ñ–µ–ª–µ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ (–ø—Ä—è–º–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
            ('–ö–£–¢-2', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª–µ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ 2-—Ä—è–¥–Ω–∞—è', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª–µ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', None),
            ('–ö–ö-1', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª–µ–∫–æ–ø–∞–ª–∫–∞ –æ–¥–Ω–æ—Ä—è–¥–Ω–∞—è', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª–µ—É–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', None),
            
            # –ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è
            ('–ë-–ú8—Ö20', '–ë–æ–ª—Ç –ú8—Ö20 –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–π', '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è', '–ë–æ–ª—Ç—ã'),
            ('–í-–ú6—Ö15', '–í–∏–Ω—Ç –ú6—Ö15 –Ω–µ—Ä–∂–∞–≤–µ—é—â–∏–π', '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è', '–í–∏–Ω—Ç—ã'),
            ('–ì-–ú8', '–ì–∞–π–∫–∞ –ú8 –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω–∞—è', '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è', '–ì–∞–π–∫–∏'),
            ('–ó-4—Ö10', '–ó–∞–∫–ª–µ–ø–∫–∞ 4—Ö10 –∞–ª—é–º–∏–Ω–∏–µ–≤–∞—è', '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è', '–ó–∞–∫–ª–µ–ø–∫–∏'),
            ('–û-20—Ö200', '–û—Å—å 20—Ö200 —Å—Ç–∞–ª—å–Ω–∞—è', '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è', '–û—Å–∏'),
            ('–®–ü-8', '–®–∞–π–±–∞ –ø—Ä—É–∂–∏–Ω–Ω–∞—è 8–º–º', '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è', '–®–∞–π–±—ã –ø—Ä—É–∂–∏–Ω–Ω—ã–µ'),
            ('–®-–ú10—Ö80', '–®–ø–∏–ª—å–∫–∞ –ú10—Ö80 —Ä–µ–∑—å–±–æ–≤–∞—è', '–ú–µ—Ç–∏–∑–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è', '–®–ø–∏–ª—å–∫–∞'),
            
            # –ü—Ä–æ—á–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–µ–∑ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
            ('–ü–¢-001', '–ü—Ä–æ—á–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è', '–ü—Ä–æ—á–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', None),
            ('–ë–ü-500', '–ë—É–Ω–∫–µ—Ä-–ø–µ—Ä–µ–≥—Ä—É–∑—á–∏–∫ 500–ª', '–ë—É–Ω–∫–µ—Ä—ã-–ø–µ—Ä–µ–≥—Ä—É–∑—á–∏–∫–∏', None),
            ('–ù–û–í-001', '–ù–æ–≤–∏–Ω–∫–∞ 2025 –≥–æ–¥–∞', '–ù–æ–≤–∏–Ω–∫–∏', None),
            ('–£–°–õ-001', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ', '–ü—Ä–æ—á–∏–µ —Ç–æ–≤–∞—Ä—ã, —Ä–∞–±–æ—Ç—ã –∏ —É—Å–ª—É–≥–∏', None),
            ('–†–°-001', '–†–µ–∂—É—â–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è', '–†–µ–∂—É—â–∏–µ —Å–∏—Å—Ç–µ–º—ã –∂–∞—Ç–æ–∫', None),
            ('–°–ù-200', '–°–∞–º–æ—Ö–æ–¥–Ω—ã–µ –Ω–æ—Å–∏–ª–∫–∏ –≥—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å 200–∫–≥', '–°–∞–º–æ—Ö–æ–¥–Ω—ã–µ –Ω–æ—Å–∏–ª–∫–∏', None),
        ]
        
        for article, name, category_name, subcategory_name in sample_products:
            try:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ç–æ–≤–∞—Ä–∞
                if subcategory_name:
                    # –¢–æ–≤–∞—Ä –∏–¥–µ—Ç –≤ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    target_category = Category.objects.get(
                        name=subcategory_name, 
                        parent__name=category_name
                    )
                else:
                    # –¢–æ–≤–∞—Ä –∏–¥–µ—Ç –ø—Ä—è–º–æ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    target_category = Category.objects.get(
                        name=category_name, 
                        parent__isnull=True
                    )
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–æ–≤–∞—Ä
                if not Product.objects.filter(article=article).exists():
                    product = Product.objects.create(
                        name=name,
                        article=article,
                        slug=self.generate_unique_slug(f"{name}-{article}"),
                        description=f'–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä {name} –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –û–ê–û "–ì–ó–õ–∏–ù"',
                        category=target_category,
                        price=Decimal(str(random.randint(50000, 3000000))),
                        stock_quantity=random.randint(1, 20),
                        is_active=True,
                        is_published=True,
                        is_featured=random.choice([True, False])
                    )
                    created_products += 1
                    self.stdout.write(f'    ‚úì –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {name} ({article})')
                else:
                    self.stdout.write(f'      –¢–æ–≤–∞—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {article}')
                    
            except Category.DoesNotExist:
                self.stdout.write(f'‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ {article}: {category_name} -> {subcategory_name}')
            except Exception as e:
                self.stdout.write(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ {article}: {e}')
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stdout.write(f'\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:')
        self.stdout.write(f'  –û—Å–Ω–æ–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–æ: {created_categories}')
        self.stdout.write(f'  –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–æ: {created_subcategories}')
        self.stdout.write(f'  –¢–æ–≤–∞—Ä–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {created_products}')
        self.stdout.write(f'  –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –ë–î: {Category.objects.count()}')
        self.stdout.write(f'  –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ë–î: {Product.objects.count()}')
        self.stdout.write('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        self.stdout.write('\nüîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:')
        main_categories = Category.objects.filter(parent__isnull=True).order_by('sort_order')
        for cat in main_categories:
            product_count = cat.get_products_count()
            self.stdout.write(f'  üìÅ {cat.name} ({product_count} —Ç–æ–≤–∞—Ä–æ–≤)')
            for subcat in cat.children.filter(is_active=True).order_by('sort_order'):
                sub_product_count = subcat.products.filter(is_active=True, is_published=True).count()
                self.stdout.write(f'    üìÇ {subcat.name} ({sub_product_count} —Ç–æ–≤–∞—Ä–æ–≤)')

    def generate_unique_slug(self, text):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π slug"""
        base_slug = slugify(text)
        slug = base_slug
        counter = 1
        
        while Category.objects.filter(slug=slug).exists() or Product.objects.filter(slug=slug).exists():
            slug = f"{base_slug}-{counter}"
            counter += 1
            
        return slug