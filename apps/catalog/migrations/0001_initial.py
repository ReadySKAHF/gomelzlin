# Generated by Django 4.2.16 on 2025-06-29 11:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Отметьте, чтобы объект был активным",
                        verbose_name="Активный",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        help_text="Заголовок для поисковых систем (до 60 символов)",
                        max_length=255,
                        verbose_name="SEO заголовок",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        help_text="Описание для поисковых систем (до 160 символов)",
                        max_length=160,
                        verbose_name="SEO описание",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True,
                        help_text="Ключевые слова через запятую",
                        max_length=255,
                        verbose_name="SEO ключевые слова",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(
                        help_text="Уникальный URL для категории",
                        max_length=100,
                        unique=True,
                        verbose_name="URL",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Изображение категории для каталога",
                        null=True,
                        upload_to="categories/",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Чем меньше число, тем выше в списке",
                        verbose_name="Порядок сортировки",
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Отображать на главной странице",
                        verbose_name="Рекомендуемая",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="catalog.category",
                        verbose_name="Родительская категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Отметьте, чтобы объект был активным",
                        verbose_name="Активный",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        help_text="Заголовок для поисковых систем (до 60 символов)",
                        max_length=255,
                        verbose_name="SEO заголовок",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        help_text="Описание для поисковых систем (до 160 символов)",
                        max_length=160,
                        verbose_name="SEO описание",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True,
                        help_text="Ключевые слова через запятую",
                        max_length=255,
                        verbose_name="SEO ключевые слова",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="URL"),
                ),
                (
                    "article",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Артикул"
                    ),
                ),
                (
                    "short_description",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Краткое описание"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Подробное описание"),
                ),
                (
                    "specifications",
                    models.TextField(
                        blank=True, verbose_name="Технические характеристики"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="Цена"
                    ),
                ),
                (
                    "old_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Старая цена",
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество на складе"
                    ),
                ),
                (
                    "min_stock_level",
                    models.PositiveIntegerField(
                        default=5, verbose_name="Минимальный остаток"
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("pcs", "шт"),
                            ("kg", "кг"),
                            ("m", "м"),
                            ("m2", "м²"),
                            ("m3", "м³"),
                            ("l", "л"),
                            ("set", "комплект"),
                        ],
                        default="pcs",
                        max_length=10,
                        verbose_name="Единица измерения",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=8,
                        null=True,
                        verbose_name="Вес (кг)",
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(
                        blank=True,
                        help_text="Размеры в мм",
                        max_length=100,
                        verbose_name="Размеры (ДxШxВ)",
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Материал"
                    ),
                ),
                (
                    "color",
                    models.CharField(blank=True, max_length=50, verbose_name="Цвет"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Черновик"),
                            ("published", "Опубликован"),
                            ("archived", "Архивный"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="Опубликован"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Рекомендуемый"),
                ),
                (
                    "is_bestseller",
                    models.BooleanField(default=False, verbose_name="Хит продаж"),
                ),
                ("is_new", models.BooleanField(default=False, verbose_name="Новинка")),
                (
                    "views_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество просмотров"
                    ),
                ),
                (
                    "orders_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество заказов"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="products/",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата публикации"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="catalog.category",
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар",
                "verbose_name_plural": "Товары",
                "ordering": ["-created_at", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Отметьте, чтобы объект был активным",
                        verbose_name="Активный",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="products/", verbose_name="Изображение"
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Альтернативный текст"
                    ),
                ),
                (
                    "is_main",
                    models.BooleanField(
                        default=False, verbose_name="Главное изображение"
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Порядок"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="catalog.product",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение товара",
                "verbose_name_plural": "Изображения товаров",
                "ordering": ["sort_order", "created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "is_active", "is_published"],
                name="catalog_pro_categor_a9014f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["article"], name="catalog_pro_article_42a28f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="catalog_pro_price_2d2a4c_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["stock_quantity"], name="catalog_pro_stock_q_5989c9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_featured", "is_published"],
                name="catalog_pro_is_feat_db2ba2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["parent", "is_active"], name="catalog_cat_parent__e2d7e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["is_featured", "is_active"],
                name="catalog_cat_is_feat_adbf38_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["sort_order"], name="catalog_cat_sort_or_af1199_idx"
            ),
        ),
    ]
