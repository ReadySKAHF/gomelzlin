# Generated by Django 4.2.16 on 2025-06-25 15:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активно"),
                ),
                (
                    "customer_type",
                    models.CharField(
                        choices=[
                            ("individual", "Физическое лицо"),
                            ("company", "Юридическое лицо"),
                        ],
                        default="individual",
                        max_length=20,
                        verbose_name="Тип клиента",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "Новый"),
                            ("active", "Активный"),
                            ("vip", "VIP"),
                            ("inactive", "Неактивный"),
                            ("blocked", "Заблокированный"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(max_length=100, verbose_name="Контактное лицо"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=13,
                        validators=[
                            django.core.validators.RegexValidator(
                                message='Номер телефона должен быть в формате: "+375XXXXXXXXX"',
                                regex="^\\+?375\\d{9}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "additional_phone",
                    models.CharField(
                        blank=True, max_length=13, verbose_name="Дополнительный телефон"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="Беларусь", max_length=50, verbose_name="Страна"
                    ),
                ),
                (
                    "region",
                    models.CharField(blank=True, max_length=50, verbose_name="Область"),
                ),
                ("city", models.CharField(max_length=50, verbose_name="Город")),
                ("address", models.TextField(verbose_name="Адрес")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Почтовый индекс"
                    ),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("percentage", "Процент"),
                            ("fixed", "Фиксированная сумма"),
                        ],
                        default="percentage",
                        max_length=20,
                        verbose_name="Тип скидки",
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Размер скидки",
                    ),
                ),
                (
                    "credit_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Максимальная сумма задолженности",
                        max_digits=12,
                        verbose_name="Кредитный лимит",
                    ),
                ),
                (
                    "payment_terms",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Количество дней для оплаты счета",
                        verbose_name="Срок оплаты (дни)",
                    ),
                ),
                (
                    "total_orders",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Всего заказов"
                    ),
                ),
                (
                    "total_spent",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Общая сумма покупок",
                    ),
                ),
                (
                    "average_order_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Средний чек",
                    ),
                ),
                (
                    "last_order_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата последнего заказа"
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="Откуда узнал о компании",
                        max_length=100,
                        verbose_name="Источник",
                    ),
                ),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True,
                        help_text="Внутренние заметки для администрации",
                        verbose_name="Внутренние заметки",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(default=True, verbose_name="Email уведомления"),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(default=False, verbose_name="SMS уведомления"),
                ),
                (
                    "marketing_consent",
                    models.BooleanField(
                        default=False, verbose_name="Согласие на маркетинг"
                    ),
                ),
                (
                    "assigned_manager",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"user_type__in": ["admin", "manager"]},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_customers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Персональный менеджер",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Клиент",
                "verbose_name_plural": "Клиенты",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CustomerTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активно"),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Название"
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#007bff",
                        help_text="Цвет в формате HEX (#000000)",
                        max_length=7,
                        verbose_name="Цвет",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
            ],
            options={
                "verbose_name": "Тег клиента",
                "verbose_name_plural": "Теги клиентов",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CustomerNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активно"),
                ),
                (
                    "note_type",
                    models.CharField(
                        choices=[
                            ("general", "Общая"),
                            ("call", "Звонок"),
                            ("meeting", "Встреча"),
                            ("email", "Email"),
                            ("complaint", "Жалоба"),
                            ("compliment", "Благодарность"),
                        ],
                        default="general",
                        max_length=20,
                        verbose_name="Тип заметки",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Заголовок")),
                ("content", models.TextField(verbose_name="Содержание")),
                (
                    "is_important",
                    models.BooleanField(default=False, verbose_name="Важная"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_notes",
                        to="customers.customer",
                        verbose_name="Клиент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заметка о клиенте",
                "verbose_name_plural": "Заметки о клиентах",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CustomerTagAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата присвоения"
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Присвоил",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tags",
                        to="customers.customer",
                        verbose_name="Клиент",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customers",
                        to="customers.customertag",
                        verbose_name="Тег",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег клиента",
                "verbose_name_plural": "Теги клиентов",
                "unique_together": {("customer", "tag")},
            },
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(fields=["email"], name="customers_c_email_4fdeb3_idx"),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(fields=["phone"], name="customers_c_phone_8493fa_idx"),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["status", "customer_type"], name="customers_c_status_2dd3d5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(fields=["city"], name="customers_c_city_571324_idx"),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["assigned_manager"], name="customers_c_assigne_228cfa_idx"
            ),
        ),
    ]
